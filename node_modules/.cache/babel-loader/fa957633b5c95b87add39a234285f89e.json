{"ast":null,"code":"var _jsxFileName = \"/Users/mburnett/dev/jeopardy/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Question from './Question';\nimport questionData from './question-data.json';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Jeopardy\")), React.createElement(\"div\", {\n    className: \"board\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"History\"), [0, 1, 2].map((num, i) => {\n    return React.createElement(Question, {\n      key: num + i,\n      clue: questionData[num].clue,\n      answer: questionData[num].answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"History\"), [3, 4, 5].map((num, i) => {\n    return React.createElement(Question, {\n      key: num + i,\n      clue: questionData[num].clue,\n      answer: questionData[num].answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"History\"), [6, 7, 8].map((num, i) => {\n    return React.createElement(Question, {\n      key: num + i,\n      clue: questionData[num].clue,\n      answer: questionData[num].answer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mburnett/dev/jeopardy/src/App.js"],"names":["React","Question","questionData","App","map","num","i","clue","answer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;;AAEA,SAASC,GAAT,GAAe;AAEb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUC,GAAV,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxB,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAED,GAAG,GAAGC,CADb;AAEE,MAAA,IAAI,EAAEJ,YAAY,CAACG,GAAD,CAAZ,CAAkBE,IAF1B;AAGE,MAAA,MAAM,EAAEL,YAAY,CAACG,GAAD,CAAZ,CAAkBG,MAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,CAHJ,CAFJ,EAiBI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUJ,GAAV,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxB,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAED,GAAG,GAAGC,CADb;AAEE,MAAA,IAAI,EAAEJ,YAAY,CAACG,GAAD,CAAZ,CAAkBE,IAF1B;AAGE,MAAA,MAAM,EAAEL,YAAY,CAACG,GAAD,CAAZ,CAAkBG,MAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,CAHJ,CAjBJ,EAgCI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAGI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUJ,GAAV,CAAc,CAACC,GAAD,EAAMC,CAAN,KAAY;AACxB,WACE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAED,GAAG,GAAGC,CADb;AAEE,MAAA,IAAI,EAAEJ,YAAY,CAACG,GAAD,CAAZ,CAAkBE,IAF1B;AAGE,MAAA,MAAM,EAAEL,YAAY,CAACG,GAAD,CAAZ,CAAkBG,MAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,CAHJ,CAhCJ,CAJF,CADF;AAsDD;;AAED,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Question from './Question';\nimport questionData from './question-data.json';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <center>\n        <h1>Jeopardy</h1>\n      </center>\n      <div className=\"board\">\n          {/* Column - 1 (History) */}\n          <div className=\"column\">\n            <h1>History</h1>\n            {\n              [0, 1, 2].map((num, i) => {\n                return (\n                  <Question\n                    key={num + i}\n                    clue={questionData[num].clue}\n                    answer={questionData[num].answer}\n                  />\n                )\n              })\n            }\n          </div>\n          {/* Column - 2 (History) */}\n          <div className=\"column\">\n            <h1>History</h1>\n            {\n              [3, 4, 5].map((num, i) => {\n                return (\n                  <Question\n                    key={num + i}\n                    clue={questionData[num].clue}\n                    answer={questionData[num].answer}\n                  />\n                )\n              })\n            }\n          </div>\n          {/* Column - 3 (History) */}\n          <div className=\"column\">\n            <h1>History</h1>\n            {\n              [6, 7, 8].map((num, i) => {\n                return (\n                  <Question\n                    key={num + i}\n                    clue={questionData[num].clue}\n                    answer={questionData[num].answer}\n                  />\n                )\n              })\n            }\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}